static_resources:
  listeners:
    - name: listener_0
      address:
        socket_address: { address: 0.0.0.0, port_value: 80 }
      filter_chains:
        - filters:
            - name: envoy.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
                stat_prefix: ingress_http
                access_log:
                  - name: envoy.file_access_log
                    config:
                      format: "[%START_TIME%] \"%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\" %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% \"%REQ(X-FORWARDED-FOR)%\" \"%REQ(USER-AGENT)%\" \"%REQ(X-REQUEST-ID)%\" \"%REQ(:AUTHORITY)%\" \"%UPSTREAM_HOST%\"\n"
                      path: "/tmp/access.log"
                codec_type: AUTO
                route_config:
                  name: local_route
                  request_headers_to_remove: ["Authorization"]
                  virtual_hosts:
                    - name: backend
                      domains: ["*"]
                      routes:
                        - match: { prefix: "/nolimit" }
                          route:
                            prefix_rewrite: "/"
                            cluster: httpbin
                        - match: { prefix: "/" }
                          route:
                            cluster: httpbin
                            rate_limits:
                              - stage: 0
                                actions:
                                  - {
                                      generic_key:
                                        { "descriptor_value": "rateLimitMe" },
                                    }

                http_filters:
                  - name: envoy.ext_authz
                    config:
                      grpc_service:
                        envoy_grpc:
                          cluster_name: ext-authz
                  - name: envoy.rate_limit
                    config:
                      domain: httpbin
                      stage: 0
                      failure_mode_deny: false
                      rate_limit_service:
                        grpc_service:
                          envoy_grpc:
                            cluster_name: rate_limit_cluster
                          timeout: 0.25s
                  - name: envoy.router
  clusters:
    - name: httpbin
      connect_timeout: 0.25s
      type: STRICT_DNS
      lb_policy: round_robin
      load_assignment:
        cluster_name: httpbin
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: httpbin
                      port_value: 80

    - name: ext-authz
      type: STRICT_DNS
      connect_timeout: 0.25s
      http2_protocol_options: {}
      load_assignment:
        cluster_name: ext-authz
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: ext-authz
                      port_value: 4000

    - name: rate_limit_cluster
      type: strict_dns
      connect_timeout: 0.25s
      lb_policy: round_robin
      http2_protocol_options: {}
      hosts:
        - socket_address:
            address: ratelimit
            port_value: 4001

admin:
  access_log_path: "/dev/null"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8001
